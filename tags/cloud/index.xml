<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud on Blog about benchmarks, ML, clouds and camelopard.</title>
    <link>/tags/cloud/</link>
    <description>Recent content in Cloud on Blog about benchmarks, ML, clouds and camelopard.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 16 Aug 2019 19:00:00 +0300</lastBuildDate>
    
	<atom:link href="/tags/cloud/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Minimal Hardware Estimates</title>
      <link>/2019/08/16/minimal-hardware-estimates/</link>
      <pubDate>Fri, 16 Aug 2019 19:00:00 +0300</pubDate>
      
      <guid>/2019/08/16/minimal-hardware-estimates/</guid>
      <description>ProblemWhen you want to estimate hardware for Non-production environment you want to spend minimal resources on it.
Especially if you need it only for development where very low workloads expected.
Googling minimal hardware recommendations may disappoint you, because authors avoid to give such recommendations.
For example Kafka: We are using dual quad-core Intel Xeon machines with 24GB of memory. 24 GB RAM, are you sure?
Most popular answer is on Quora: Do not cheap out and try to have a machine with 48TB disk and 2GB ram and a duel core CPU, but dont go crazy.</description>
    </item>
    
    <item>
      <title>Hosting Static Website on Google Cloud Run</title>
      <link>/2019/04/11/hosting-static-website-on-google-cloud-run/</link>
      <pubDate>Thu, 11 Apr 2019 19:00:00 +0300</pubDate>
      
      <guid>/2019/04/11/hosting-static-website-on-google-cloud-run/</guid>
      <description>Deployment of static websites was always fun, easy and free. But new options arrives every day.
Google announced Cloud Run - fully managed stateless HTTP containers which we can use instead of cheaper approach on Cloud Storage https://cloud.google.com/storage/docs/hosting-static-website .
Put these 2 files near public/ folder with your content.
app.py
# Testing locally: # $ python app.pyimport osfrom flask import Flask, request, send_from_directoryapp = Flask(__name__)@app.route(&amp;#39;/&amp;#39;, defaults={&amp;#39;path&amp;#39;: &amp;#39;&amp;#39;})@app.</description>
    </item>
    
    <item>
      <title>Serverless providers</title>
      <link>/2019/03/05/serverless-providers/</link>
      <pubDate>Tue, 05 Mar 2019 19:00:00 +0300</pubDate>
      
      <guid>/2019/03/05/serverless-providers/</guid>
      <description>Here is very nice article The largest benchmark of Serverless providers.
And I really wait for new results which was promised to all of us in Berndâ€™s Twitter.
Read my article on @Medium about the benchmark of the biggest four #serverless providers. A new benchmark is coming soon!https://t.co/j45fA0R7i5
&amp;mdash; Bernd Strehl (@berndstrehl) 2019.03.04 However I found something interesting in previously piblished results.</description>
    </item>
    
  </channel>
</rss>